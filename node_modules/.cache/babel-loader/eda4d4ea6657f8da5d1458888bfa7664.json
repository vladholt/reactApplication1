{"ast":null,"code":"import _defineProperty from\"D:\\\\Anastasiya\\\\veb\\\\test\\\\test\\\\demo\\\\demo.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\Anastasiya\\\\veb\\\\test\\\\test\\\\demo\\\\demo.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Anastasiya\\\\veb\\\\test\\\\test\\\\demo\\\\demo.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"D:\\\\Anastasiya\\\\veb\\\\test\\\\test\\\\demo\\\\demo.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"D:\\\\Anastasiya\\\\veb\\\\test\\\\test\\\\demo\\\\demo.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"D:\\\\Anastasiya\\\\veb\\\\test\\\\test\\\\demo\\\\demo.github.io\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import classes from\"./Counter.module.css\";import React from\"react\";var CounterBlock=/*#__PURE__*/function(_React$Component){_inherits(CounterBlock,_React$Component);function CounterBlock(props){var _this;_classCallCheck(this,CounterBlock);_this=_possibleConstructorReturn(this,_getPrototypeOf(CounterBlock).call(this,props));_this.state={projectsCounter:0,clientCounter:0,linesCodeCounter:0,awordsCounter:0,quantity:0};//this.Counter = this.Counter.bind(this);\nreturn _this;}_createClass(CounterBlock,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var maxCount=this.maximum();this.timerID=setInterval(function(){return _this2.Counter(maxCount);},15);}},{key:\"Counter\",value:function Counter(maxCount){var count=this.state.quantity;var status=this.props.status;for(var key in status){if(count<=status[key]){this.setState(_defineProperty({},key,count));}}count++;// инкримируем счетчик\nthis.setState({quantity:count});// сохраняем значение счетчика\nif(count===maxCount)clearInterval(this.timerID);//  return(count);\n}},{key:\"maximum\",value:function maximum(){var max=0;var status=this.props.status;for(var key in status){if(max<=status[key]){max=status[key];}}return max;}},{key:\"render\",value:function render(){return React.createElement(\"div\",{className:classes.counterItems},React.createElement(\"h1\",{className:classes.counterH1},\"why work with us\"),React.createElement(\"div\",{className:classes.numbers},React.createElement(\"div\",{className:classes.numberProgress},React.createElement(\"span\",{className:classes.one},this.state.projectsCounter,\"+\"),React.createElement(\"br\",null),React.createElement(\"span\",{className:classes.infoProgress},\"project completed\")),React.createElement(\"div\",{className:classes.numberProgress},React.createElement(\"span\",{className:classes.two},this.state.clientCounter,\"+\"),React.createElement(\"br\",null),React.createElement(\"span\",{className:classes.infoProgress},\"Happy Clients\")),React.createElement(\"div\",{className:classes.numberProgress},React.createElement(\"span\",{className:classes.three},this.state.linesCodeCounter,\"K+\"),React.createElement(\"br\",null),React.createElement(\"span\",{className:classes.infoProgress},\"Lines Of Code\")),React.createElement(\"div\",{className:classes.numberProgress},React.createElement(\"span\",{className:classes.fore},this.state.awordsCounter),React.createElement(\"br\",null),React.createElement(\"span\",{className:classes.infoProgress},\"Awards\"))));}}]);return CounterBlock;}(React.Component);export default CounterBlock;","map":{"version":3,"sources":["D:/Anastasiya/veb/test/test/demo/demo.github.io/src/components/About/Counter/Counter.js"],"names":["classes","React","CounterBlock","props","state","projectsCounter","clientCounter","linesCodeCounter","awordsCounter","quantity","maxCount","maximum","timerID","setInterval","Counter","count","status","key","setState","clearInterval","max","counterItems","counterH1","numbers","numberProgress","one","infoProgress","two","three","fore","Component"],"mappings":"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","sourcesContent":["\r\nimport classes from \"./Counter.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\nclass CounterBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectsCounter: 0,\r\n            clientCounter: 0,\r\n            linesCodeCounter: 0,\r\n            awordsCounter: 0,\r\n            quantity: 0\r\n        };\r\n\r\n        //this.Counter = this.Counter.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let maxCount=this.maximum();\r\n        this.timerID = setInterval(\r\n            () => this.Counter(maxCount),\r\n            15\r\n        );\r\n\r\n    }\r\n\r\n    Counter (maxCount) {\r\n        let count = this.state.quantity;\r\n        let status=this.props.status;\r\n        for (var key in status) {\r\n            if(count<=status[key]){\r\n                this.setState({[key]: count});\r\n            }\r\n        }\r\n        count++; // инкримируем счетчик\r\n        this.setState({quantity: count});\r\n        // сохраняем значение счетчика\r\n        if(count===maxCount)clearInterval(this.timerID);\r\n\r\n        //  return(count);\r\n    }\r\n\r\n    maximum () {\r\n        let max=0;\r\n        let status=this.props.status;\r\n        for (var key in status) {\r\n            if(max<=status[key]){\r\n                max = status[key];\r\n            }\r\n        }\r\n        return(max);\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n           <div className={classes.counterItems}>\r\n            <h1 className={classes.counterH1}>why work with us</h1>\r\n            <div className={classes.numbers}>\r\n                <div className={classes.numberProgress}>\r\n                    <span className={classes.one}>{this.state.projectsCounter}+</span><br/>\r\n                    <span className={classes.infoProgress}>project completed</span>\r\n                </div>\r\n                <div className={classes.numberProgress}>\r\n                    <span className={classes.two}>{this.state.clientCounter}+</span><br/>\r\n                    <span className={classes.infoProgress}>Happy Clients</span>\r\n                </div>\r\n                <div className={classes.numberProgress}>\r\n                    <span className={classes.three}>{this.state.linesCodeCounter}K+</span><br/>\r\n                    <span className={classes.infoProgress}>Lines Of Code</span>\r\n                </div>\r\n                <div className={classes.numberProgress}>\r\n                    <span className={classes.fore}>{this.state.awordsCounter}</span><br/>\r\n                    <span className={classes.infoProgress}>Awards</span>\r\n                </div>\r\n            </div>\r\n           </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default CounterBlock;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}