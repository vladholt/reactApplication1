{"ast":null,"code":"var _jsxFileName = \"D:\\\\Anastasiya\\\\veb\\\\test\\\\my-app\\\\src\\\\components\\\\Home\\\\BlockGalleryBlue\\\\Gallery.js\";\nimport s from './Gallery.module.css';\nimport React, { Component } from \"react\";\n\nclass Slider1 extends React.Component {\n  constructor(props) {\n    //console.log(props)\n    super(props);\n    this.state = {\n      image: props.galleryBlue,\n      currentImageIndex: 0,\n      isCycleMode: false,\n      stepPrev: false,\n      stepNext: true\n    };\n    this.nextSliderHandler = this.nextSliderHandler.bind(this);\n  }\n\n  nextSliderHandler(e) {\n    let newIndex = this.state.currentImageIndex;\n\n    if (e.currentTarget.dataset.direction === 'next') {\n      if (newIndex < this.state.image.length - 1) {\n        newIndex = this.state.currentImageIndex + 1;\n        this.setState({\n          stepPrev: true //если сделали шаг вперед - есть шаг назад\n\n        });\n      }\n\n      if (newIndex === this.state.image.length - 1) {\n        this.setState({\n          stepNext: false //если дошлли до конца массива\n\n        });\n      }\n    } else {\n      if (newIndex > 0) {\n        newIndex = this.state.currentImageIndex - 1;\n        this.setState({\n          stepNext: true\n        });\n      }\n\n      if (newIndex === 0) {\n        this.setState({\n          stepPrev: false\n        });\n      }\n    }\n\n    this.setState({\n      currentImageIndex: newIndex\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: s.blockGallery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: s.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.image[this.state.currentImageIndex],\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: !this.state.stepPrev,\n      \"data-direction\": \"prev\",\n      onClick: this.nextSliderHandler.bind(this),\n      className: `${s.prev} ${s.btn}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" \\u02C2 \"), React.createElement(\"button\", {\n      disabled: !this.state.stepNext,\n      \"data-direction\": \"next\",\n      onClick: this.nextSliderHandler.bind(this),\n      className: `${s.next} ${s.btn}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" \\u02C3\")));\n  }\n\n}\n\nexport default Slider1;\n/*let galery = props.galleryBlue.map(e=>\r\n\r\n            <div className={s.itemGallery}>\r\n                <img src={e.img} alt={e.alt}/>\r\n            </div>\r\n    );\r\n\r\n    return(\r\n        <div className={s.dd}>\r\n            <div className={s.blockGallery}>\r\n\r\n                <div className={s.viewArea}> </div>\r\n                <button className={s.btn}> </button>\r\n                <button className={s.btn}> </button>\r\n\r\n            </div>\r\n            <div className={s.container}>\r\n                {galery}\r\n            </div>\r\n        </div>\r\n    );*/\n\n/* <div style ={{display: \"inline-block\"}} className={s.area}>  {galery} </div> */","map":{"version":3,"sources":["D:/Anastasiya/veb/test/my-app/src/components/Home/BlockGalleryBlue/Gallery.js"],"names":["s","React","Component","Slider1","constructor","props","state","image","galleryBlue","currentImageIndex","isCycleMode","stepPrev","stepNext","nextSliderHandler","bind","e","newIndex","currentTarget","dataset","direction","length","setState","render","blockGallery","container","prev","btn","next"],"mappings":"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","sourcesContent":["import s from './Gallery.module.css'\r\nimport React, {Component} from \"react\";\r\n\r\nclass Slider1 extends  React.Component{\r\n\r\n    constructor(props) {\r\n        //console.log(props)\r\n        super(props);\r\n        this.state = {\r\n            image: props.galleryBlue,\r\n            currentImageIndex: 0,\r\n            isCycleMode: false,\r\n            stepPrev: false,\r\n            stepNext:true\r\n        };\r\n        this.nextSliderHandler = this.nextSliderHandler.bind(this);\r\n    }\r\n    nextSliderHandler (e){\r\n        let newIndex = this.state.currentImageIndex;\r\n        if(e.currentTarget.dataset.direction ==='next') {\r\n            if(newIndex < this.state.image.length-1) {\r\n                newIndex = this.state.currentImageIndex + 1;\r\n                this.setState({\r\n                    stepPrev: true//если сделали шаг вперед - есть шаг назад\r\n                });\r\n            }\r\n            if(newIndex===this.state.image.length-1){\r\n                this.setState({\r\n                    stepNext: false//если дошлли до конца массива\r\n                });\r\n\r\n            }\r\n\r\n        }else{\r\n            if(newIndex > 0){\r\n                newIndex = this.state.currentImageIndex -1;\r\n                this.setState({\r\n                    stepNext: true\r\n                });\r\n            }\r\n            if(newIndex === 0) {\r\n                this.setState({\r\n                    stepPrev: false\r\n                });\r\n            }\r\n        }\r\n\r\n            this.setState({currentImageIndex: newIndex});\r\n     }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n                <div className={s.blockGallery}>\r\n\r\n                    <div className={s.container}>\r\n                        <img src={this.state.image[this.state.currentImageIndex]} alt=\"\"/>\r\n                    <button disabled={!this.state.stepPrev} data-direction='prev' onClick={this.nextSliderHandler.bind(this)} className={`${s.prev} ${s.btn}`}> &#706; </button>\r\n                    <button disabled={!this.state.stepNext} data-direction='next' onClick={this.nextSliderHandler.bind(this)} className={`${s.next} ${s.btn}`}> &#707;</button>\r\n                </div>\r\n\r\n                </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default Slider1;\r\n/*let galery = props.galleryBlue.map(e=>\r\n\r\n            <div className={s.itemGallery}>\r\n                <img src={e.img} alt={e.alt}/>\r\n            </div>\r\n    );\r\n\r\n    return(\r\n        <div className={s.dd}>\r\n            <div className={s.blockGallery}>\r\n\r\n                <div className={s.viewArea}> </div>\r\n                <button className={s.btn}> </button>\r\n                <button className={s.btn}> </button>\r\n\r\n            </div>\r\n            <div className={s.container}>\r\n                {galery}\r\n            </div>\r\n        </div>\r\n    );*/\r\n/* <div style ={{display: \"inline-block\"}} className={s.area}>  {galery} </div> */"]},"metadata":{},"sourceType":"module"}