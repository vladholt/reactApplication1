{"ast":null,"code":"var _jsxFileName = \"D:\\\\Anastasiya\\\\veb\\\\test\\\\my-app\\\\src\\\\components\\\\About\\\\Counter\\\\Counter.js\";\nimport classes from \"./Counter.module.css\";\nimport React from \"react\";\n\nclass CounterBlock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectsCounter: 0,\n      clientCounter: 0,\n      linesCodeCounter: 0,\n      awordsCounter: 0,\n      quantity: 0\n    }; //this.Counter = this.Counter.bind(this);\n  }\n\n  componentDidMount() {\n    let maxCount = this.maximum();\n    this.timerID = setInterval(() => this.Counter(maxCount), 5);\n  }\n\n  Counter(maxCount) {\n    let count = this.state.quantity;\n    let status = this.props.status;\n\n    for (var key in status) {\n      if (count <= status[key]) {\n        this.setState({\n          [key]: count\n        });\n      }\n    }\n\n    count++; // инкримируем счетчик\n\n    this.setState({\n      quantity: count\n    }); // сохраняем значение счетчика\n\n    if (count === maxCount) clearInterval(this.timerID); //  return(count);\n  }\n\n  maximum() {\n    let max = 0;\n    let status = this.props.status;\n\n    for (var key in status) {\n      if (max <= status[key]) {\n        max = status[key];\n      }\n    }\n\n    return max;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" \", this.state.projectsCounter)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \" \", this.state.clientCounter)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \", this.state.linesCodeCounter)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" \", this.state.awordsCounter)));\n  }\n\n}\n\nexport default CounterBlock;\n/*<div className={classes.counterItems}>\r\n                        <h1 className={classes.counterH1}>why work with us</h1>\r\n                        <div className={classes.numbers}>\r\n                            <div className={classes.numberProgress}>\r\n                                <span className={classes.one}>150+</span><br/>\r\n                                <span className={classes.infoProgress}>project completed</span>\r\n                            </div>\r\n                            <div className={classes.numberProgress}>\r\n                                <span className={classes.two}>140+</span><br/>\r\n                                <span className={classes.infoProgress}>Happy Clients</span>\r\n                            </div>\r\n                            <div className={classes.numberProgress}>\r\n                                <span className={classes.three}>250K+</span><br/>\r\n                                <span className={classes.infoProgress}>Lines Of Code</span>\r\n                            </div>\r\n                            <div className={classes.numberProgress}>\r\n                                <span className={classes.fore}>12</span><br/>\r\n                                <span className={classes.infoProgress}>Awards</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>*/","map":{"version":3,"sources":["D:/Anastasiya/veb/test/my-app/src/components/About/Counter/Counter.js"],"names":["classes","React","CounterBlock","Component","constructor","props","state","projectsCounter","clientCounter","linesCodeCounter","awordsCounter","quantity","componentDidMount","maxCount","maximum","timerID","setInterval","Counter","count","status","key","setState","clearInterval","max","render"],"mappings":";AACA,OAAOA,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,eAAe,EAAE,CADR;AAETC,MAAAA,aAAa,EAAE,CAFN;AAGTC,MAAAA,gBAAgB,EAAE,CAHT;AAITC,MAAAA,aAAa,EAAE,CAJN;AAKTC,MAAAA,QAAQ,EAAE;AALD,KAAb,CAFe,CAUf;AACH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,QAAQ,GAAC,KAAKC,OAAL,EAAb;AACA,SAAKC,OAAL,GAAeC,WAAW,CACtB,MAAM,KAAKC,OAAL,CAAaJ,QAAb,CADgB,EAEtB,CAFsB,CAA1B;AAKH;;AAEDI,EAAAA,OAAO,CAAEJ,QAAF,EAAY;AACf,QAAIK,KAAK,GAAG,KAAKZ,KAAL,CAAWK,QAAvB;AACA,QAAIQ,MAAM,GAAC,KAAKd,KAAL,CAAWc,MAAtB;;AACA,SAAK,IAAIC,GAAT,IAAgBD,MAAhB,EAAwB;AACpB,UAAGD,KAAK,IAAEC,MAAM,CAACC,GAAD,CAAhB,EAAsB;AAClB,aAAKC,QAAL,CAAc;AAAC,WAACD,GAAD,GAAOF;AAAR,SAAd;AACH;AACJ;;AACDA,IAAAA,KAAK,GARU,CAQN;;AACT,SAAKG,QAAL,CAAc;AAACV,MAAAA,QAAQ,EAAEO;AAAX,KAAd,EATe,CAUf;;AACA,QAAGA,KAAK,KAAGL,QAAX,EAAoBS,aAAa,CAAC,KAAKP,OAAN,CAAb,CAXL,CAaf;AACH;;AAEDD,EAAAA,OAAO,GAAI;AACP,QAAIS,GAAG,GAAC,CAAR;AACA,QAAIJ,MAAM,GAAC,KAAKd,KAAL,CAAWc,MAAtB;;AACA,SAAK,IAAIC,GAAT,IAAgBD,MAAhB,EAAwB;AACpB,UAAGI,GAAG,IAAEJ,MAAM,CAACC,GAAD,CAAd,EAAoB;AAChBG,QAAAA,GAAG,GAAGJ,MAAM,CAACC,GAAD,CAAZ;AACH;AACJ;;AACD,WAAOG,GAAP;AACH;;AAKDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKlB,KAAL,CAAWC,eAAlB,CADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKD,KAAL,CAAWE,aAAlB,CADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKF,KAAL,CAAWG,gBAAlB,CADJ,CAPJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAO,KAAKH,KAAL,CAAWI,aAAlB,CADJ,CAVJ,CADJ;AAgBH;;AAvEsC;;AAyE3C,eAAeR,YAAf;AAQA","sourcesContent":["\r\nimport classes from \"./Counter.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\nclass CounterBlock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            projectsCounter: 0,\r\n            clientCounter: 0,\r\n            linesCodeCounter: 0,\r\n            awordsCounter: 0,\r\n            quantity: 0\r\n        };\r\n\r\n        //this.Counter = this.Counter.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let maxCount=this.maximum();\r\n        this.timerID = setInterval(\r\n            () => this.Counter(maxCount),\r\n            5\r\n        );\r\n\r\n    }\r\n\r\n    Counter (maxCount) {\r\n        let count = this.state.quantity;\r\n        let status=this.props.status;\r\n        for (var key in status) {\r\n            if(count<=status[key]){\r\n                this.setState({[key]: count});\r\n            }\r\n        }\r\n        count++; // инкримируем счетчик\r\n        this.setState({quantity: count});\r\n        // сохраняем значение счетчика\r\n        if(count===maxCount)clearInterval(this.timerID);\r\n\r\n        //  return(count);\r\n    }\r\n\r\n    maximum () {\r\n        let max=0;\r\n        let status=this.props.status;\r\n        for (var key in status) {\r\n            if(max<=status[key]){\r\n                max = status[key];\r\n            }\r\n        }\r\n        return(max);\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <div> {this.state.projectsCounter}</div>\r\n                </div>\r\n                <div>\r\n                    <div> {this.state.clientCounter}</div>\r\n                </div>\r\n                <div>\r\n                    <div> {this.state.linesCodeCounter}</div>\r\n                </div>\r\n                <div>\r\n                    <div> {this.state.awordsCounter}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default CounterBlock;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/*<div className={classes.counterItems}>\r\n                        <h1 className={classes.counterH1}>why work with us</h1>\r\n                        <div className={classes.numbers}>\r\n                            <div className={classes.numberProgress}>\r\n                                <span className={classes.one}>150+</span><br/>\r\n                                <span className={classes.infoProgress}>project completed</span>\r\n                            </div>\r\n                            <div className={classes.numberProgress}>\r\n                                <span className={classes.two}>140+</span><br/>\r\n                                <span className={classes.infoProgress}>Happy Clients</span>\r\n                            </div>\r\n                            <div className={classes.numberProgress}>\r\n                                <span className={classes.three}>250K+</span><br/>\r\n                                <span className={classes.infoProgress}>Lines Of Code</span>\r\n                            </div>\r\n                            <div className={classes.numberProgress}>\r\n                                <span className={classes.fore}>12</span><br/>\r\n                                <span className={classes.infoProgress}>Awards</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>*/"]},"metadata":{},"sourceType":"module"}